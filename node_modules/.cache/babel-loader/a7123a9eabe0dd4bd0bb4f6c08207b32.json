{"ast":null,"code":"import _defineProperty from \"D:\\\\Expenses_Tracker\\\\300seconds-master\\\\300seconds-master\\\\coreui_react_starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"D:\\\\Expenses_Tracker\\\\300seconds-master\\\\300seconds-master\\\\coreui_react_starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"D:\\\\Expenses_Tracker\\\\300seconds-master\\\\300seconds-master\\\\coreui_react_starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Expenses_Tracker\\\\300seconds-master\\\\300seconds-master\\\\coreui_react_starter\\\\src\\\\views\\\\page\\\\income\\\\components\\\\UserList.js\";\n\nimport React from \"react\";\nimport { useContext, useState } from \"react\";\nimport { AppContext } from \"../Context\";\n\nvar UserList = function UserList() {\n  var _useContext = useContext(AppContext),\n      users = _useContext.users,\n      userLength = _useContext.userLength,\n      editMode = _useContext.editMode,\n      cancelEdit = _useContext.cancelEdit,\n      updateUser = _useContext.updateUser,\n      deleteUser = _useContext.deleteUser; // Storing users new data when they editing their info.\n\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      newData = _useState2[0],\n      setNewData = _useState2[1];\n\n  var saveBtn = function saveBtn() {\n    updateUser(newData);\n  };\n\n  var updateNewData = function updateNewData(e, field) {\n    setNewData(_objectSpread(_objectSpread({}, newData), {}, _defineProperty({}, field, e.target.value)));\n  };\n\n  var enableEdit = function enableEdit(id, user_amount, user) {\n    setNewData({\n      id: id,\n      user_name: user_name,\n      user_email: user_email\n    });\n    editMode(id);\n  };\n\n  var deleteConfirm = function deleteConfirm(id) {\n    if (window.confirm(\"Are you sure?\")) {\n      deleteUser(id);\n    }\n  };\n\n  return !userLength ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, userLength === null ? \"Loading...\" : \"Please insert some users.\") : /*#__PURE__*/React.createElement(\"table\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \"Action\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, users.map(function (_ref) {\n    var id = _ref.id,\n        user_name = _ref.user_name,\n        user_email = _ref.user_email,\n        isEditing = _ref.isEditing;\n    return isEditing === true ? /*#__PURE__*/React.createElement(\"tr\", {\n      key: id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      defaultValue: user_name,\n      onChange: function onChange(e) {\n        return updateNewData(e, \"user_name\");\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      defaultValue: user_email,\n      onChange: function onChange(e) {\n        return updateNewData(e, \"user_email\");\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn green-btn\",\n      onClick: function onClick() {\n        return saveBtn();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, \"Save\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn default-btn\",\n      onClick: function onClick() {\n        return cancelEdit(id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, \"Cancel\"))) : /*#__PURE__*/React.createElement(\"tr\", {\n      key: id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }, user_name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }, user_email), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn default-btn\",\n      onClick: function onClick() {\n        return enableEdit(id, user_name, user_email);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, \"Edit\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn red-btn\",\n      onClick: function onClick() {\n        return deleteConfirm(id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, \"Delete\")));\n  })));\n};\n\nexport default UserList;","map":{"version":3,"sources":["D:/Expenses_Tracker/300seconds-master/300seconds-master/coreui_react_starter/src/views/page/income/components/UserList.js"],"names":["React","useContext","useState","AppContext","UserList","users","userLength","editMode","cancelEdit","updateUser","deleteUser","newData","setNewData","saveBtn","updateNewData","e","field","target","value","enableEdit","id","user_amount","user","user_name","user_email","deleteConfirm","window","confirm","map","isEditing"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useContext, useState } from \"react\";\r\nimport { AppContext } from \"../Context\";\r\n\r\nconst UserList = () => {\r\n  const {\r\n    users,\r\n    userLength,\r\n    editMode,\r\n    cancelEdit,\r\n    updateUser,\r\n    deleteUser,\r\n  } = useContext(AppContext);\r\n\r\n  // Storing users new data when they editing their info.\r\n  const [newData, setNewData] = useState({});\r\n\r\n  const saveBtn = () => {\r\n    updateUser(newData);\r\n  };\r\n\r\n  const updateNewData = (e, field) => {\r\n    setNewData({\r\n      ...newData,\r\n      [field]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const enableEdit = (id, user_amount, user) => {\r\n    setNewData({ id, user_name, user_email });\r\n    editMode(id);\r\n  };\r\n\r\n  const deleteConfirm = (id) => {\r\n    if (window.confirm(\"Are you sure?\")) {\r\n      deleteUser(id);\r\n    }\r\n  };\r\n\r\n  return !userLength ? (\r\n    <p>{userLength === null ? \"Loading...\" : \"Please insert some users.\"}</p>\r\n  ) : (\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Email</th>\r\n          <th>Action</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {users.map(({ id, user_name, user_email, isEditing }) => {\r\n          return isEditing === true ? (\r\n            <tr key={id}>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  defaultValue={user_name}\r\n                  onChange={(e) => updateNewData(e, \"user_name\")}\r\n                />\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"email\"\r\n                  defaultValue={user_email}\r\n                  onChange={(e) => updateNewData(e, \"user_email\")}\r\n                />\r\n              </td>\r\n              <td>\r\n                <button className=\"btn green-btn\" onClick={() => saveBtn()}>\r\n                  Save\r\n                </button>\r\n                <button\r\n                  className=\"btn default-btn\"\r\n                  onClick={() => cancelEdit(id)}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ) : (\r\n            <tr key={id}>\r\n              <td>{user_name}</td>\r\n              <td>{user_email}</td>\r\n              <td>\r\n                <button\r\n                  className=\"btn default-btn\"\r\n                  onClick={() => enableEdit(id, user_name, user_email)}\r\n                >\r\n                  Edit\r\n                </button>\r\n                <button\r\n                  className=\"btn red-btn\"\r\n                  onClick={() => deleteConfirm(id)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n"]},"metadata":{},"sourceType":"module"}